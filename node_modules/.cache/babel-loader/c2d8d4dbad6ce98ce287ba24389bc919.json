{"ast":null,"code":"var _jsxFileName = \"/Users/lizaz/fed-exam-category-tree-blcts/src/components/TreesMain.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TreesMain = props => {\n  _s();\n\n  const {\n    mainTrees,\n    onSetBranches,\n    branches\n  } = props;\n  const [isShowKids, setIsShowKids] = useState(true);\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const [editedBranchId, setEditedBranchId] = useState('');\n  const [editedName, setEditedName] = useState('');\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n\n    if (editedBranchId !== null) {\n      const editedTree = mainTrees.filter(tree => tree.id === editedBranchId)[0];\n      setEditedName(editedTree.name);\n    }\n  }, []);\n\n  const editHandler = event => {\n    event.preventDefault();\n    const renamedBranch = branches.find(branch => branch.id === editedBranchId);\n\n    if (renamedBranch !== undefined) {\n      renamedBranch.name === editedName ? renamedBranch : renamedBranch.name = editedName;\n    }\n\n    setIsEditorOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"treeapp__main\",\n    \"data-cy\": \"TreeList\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this) // {/* {isLoading && todo.id === openedTodoId && <Loader />} */}\n  ;\n};\n\n_s(TreesMain, \"65mP8kdfox8PnAEwg7kEvJthblM=\");\n\n_c = TreesMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreesMain\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TreesMain","props","mainTrees","onSetBranches","branches","isShowKids","setIsShowKids","isEditorOpen","setIsEditorOpen","editedBranchId","setEditedBranchId","editedName","setEditedName","ref","current","focus","editedTree","filter","tree","id","name","editHandler","event","preventDefault","renamedBranch","find","branch","undefined"],"sources":["/Users/lizaz/fed-exam-category-tree-blcts/src/components/TreesMain.tsx"],"sourcesContent":["import React, {  FC, useState, FormEvent, useRef, useEffect } from 'react';\nimport { Tree } from '../types/Tree';\nimport { Branch } from './branch';\nimport { EditComponent } from './EditComponent';\n\ninterface Props {\n  mainTrees: Tree[],\n  onSetBranches: (v: Tree[]) => void,\n  branches: Tree[],\n}\nexport const TreesMain: FC <Props> = (props) => {\n  const { mainTrees, onSetBranches, branches } = props;\n  const [isShowKids, setIsShowKids] = useState(true);\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const [editedBranchId, setEditedBranchId] = useState('');\n  const [editedName, setEditedName] = useState('');\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n\n    if (editedBranchId !== null) {\n      const editedTree = mainTrees.filter(tree => tree.id === editedBranchId)[0];\n      setEditedName(editedTree.name)\n    }\n  }, []);\n\n  const editHandler = (event: FormEvent) => {\n    event.preventDefault();\n\n    const renamedBranch = branches.find(branch => branch.id === editedBranchId)\n\n    if (renamedBranch !== undefined) {\n        renamedBranch.name === editedName\n          ? renamedBranch\n          : renamedBranch.name = editedName\n    }\n    setIsEditorOpen(false);\n  };\n\n  return (\n    <section className=\"treeapp__main\" data-cy=\"TreeList\">\n      <div class=\"content\">\n\n      </div>\n    </section>\n          // {/* {isLoading && todo.id === openedTodoId && <Loader />} */}\n  )\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAqBC,QAArB,EAA0CC,MAA1C,EAAkDC,SAAlD,QAAmE,OAAnE;;AAUA,OAAO,MAAMC,SAAqB,GAAIC,KAAD,IAAW;EAAA;;EAC9C,MAAM;IAAEC,SAAF;IAAaC,aAAb;IAA4BC;EAA5B,IAAyCH,KAA/C;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAMgB,GAAG,GAAGf,MAAM,CAAmB,IAAnB,CAAlB;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIc,GAAG,CAACC,OAAR,EAAiB;MACfD,GAAG,CAACC,OAAJ,CAAYC,KAAZ;IACD;;IAED,IAAIN,cAAc,KAAK,IAAvB,EAA6B;MAC3B,MAAMO,UAAU,GAAGd,SAAS,CAACe,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYV,cAArC,EAAqD,CAArD,CAAnB;MACAG,aAAa,CAACI,UAAU,CAACI,IAAZ,CAAb;IACD;EACF,CATQ,EASN,EATM,CAAT;;EAWA,MAAMC,WAAW,GAAIC,KAAD,IAAsB;IACxCA,KAAK,CAACC,cAAN;IAEA,MAAMC,aAAa,GAAGpB,QAAQ,CAACqB,IAAT,CAAcC,MAAM,IAAIA,MAAM,CAACP,EAAP,KAAcV,cAAtC,CAAtB;;IAEA,IAAIe,aAAa,KAAKG,SAAtB,EAAiC;MAC7BH,aAAa,CAACJ,IAAd,KAAuBT,UAAvB,GACIa,aADJ,GAEIA,aAAa,CAACJ,IAAd,GAAqBT,UAFzB;IAGH;;IACDH,eAAe,CAAC,KAAD,CAAf;EACD,CAXD;;EAaA,oBACE;IAAS,SAAS,EAAC,eAAnB;IAAmC,WAAQ,UAA3C;IAAA,uBACE;MAAK,KAAK,EAAC;IAAX;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF,CAMQ;EANR;AAQD,CAxCM;;GAAMR,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}