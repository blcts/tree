{"ast":null,"code":"var _jsxFileName = \"/Users/lizaz/fed-exam-category-tree-blcts/src/components/todoMain.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { deleteTodos, editTodo } from '../api/todos';\nimport { Loader } from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoMain = props => {\n  _s();\n\n  const {\n    todos,\n    setTodos,\n    isLoading,\n    visibleTodos,\n    setIsLoading\n  } = props;\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const [openedTodoId, setOpenedTodoId] = useState(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, []);\n\n  const editHandler = event => {\n    setIsLoading(true);\n    event.preventDefault();\n\n    if (openedTodoId) {\n      editTodo(openedTodoId, editedTitle);\n      const editedTodo = todos.find(todo => todo.id === openedTodoId);\n\n      if (editedTodo) {\n        editedTodo.title = editedTitle;\n      }\n\n      setTodos(todos.map(todo => todo.id === openedTodoId ? editedTodo : todo));\n    }\n\n    setIsEditorOpen(false);\n    setIsLoading(false);\n  };\n\n  const toggler = todoId => {\n    setIsLoading(true);\n    setOpenedTodoId(todoId);\n    const changedTodo = todos.find(todo => todoId === todo.id);\n    const newTodo = { ...changedTodo\n    };\n    const todoTitle = changedTodo === null || changedTodo === void 0 ? void 0 : changedTodo.title;\n\n    if (changedTodo) {\n      newTodo.completed = !changedTodo.completed;\n      editTodo(todoId, todoTitle, newTodo.completed);\n    }\n\n    setTodos(prevTodos => prevTodos.map(todo => {\n      if (todo.id === newTodo.id) {\n        return newTodo;\n      }\n\n      return todo;\n    }));\n    setIsLoading(false);\n  };\n\n  const onDelete = todoId => {\n    deleteTodos(todoId);\n    setTodos(prev => prev.filter(todo => todo.id !== todoId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp__main\",\n    \"data-cy\": \"TodoList\",\n    children: (visibleTodos || todos).map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-cy\": \"Todo\",\n      className: classNames('todo', {\n        completed: todo.completed\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo__status-label\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-cy\": \"TodoStatus\",\n          type: \"checkbox\",\n          className: \"todo__status\",\n          checked: todo.completed,\n          onChange: () => {\n            toggler(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), isEditorOpen && todo.id === openedTodoId ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editHandler,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref,\n          \"data-cy\": \"TodoTitleField\",\n          type: \"text\",\n          className: \"todo__title-field\",\n          placeholder: \"Empty todo will be deleted\",\n          value: editedTitle,\n          onChange: event => setEditedTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-cy\": \"TodoTitle\",\n        className: \"todo__title\",\n        onDoubleClick: () => {\n          setIsEditorOpen(true);\n          setOpenedTodoId(todo.id);\n          setEditedTitle(todo.title);\n        },\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), isLoading && todo.id === openedTodoId && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"todo__remove\",\n        \"data-cy\": \"TodoDeleteButton\",\n        onClick: () => {\n          onDelete(todo.id);\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoMain, \"6KBbHwXa+CP/YCl96Ze1RVcYM5Y=\");\n\n_c = TodoMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoMain\");","map":{"version":3,"names":["classNames","React","useEffect","useRef","useState","deleteTodos","editTodo","Loader","TodoMain","props","todos","setTodos","isLoading","visibleTodos","setIsLoading","isEditorOpen","setIsEditorOpen","openedTodoId","setOpenedTodoId","editedTitle","setEditedTitle","ref","current","focus","editHandler","event","preventDefault","editedTodo","find","todo","id","title","map","toggler","todoId","changedTodo","newTodo","todoTitle","completed","prevTodos","onDelete","prev","filter","target","value"],"sources":["/Users/lizaz/fed-exam-category-tree-blcts/src/components/todoMain.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, {\n  FormEvent,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { deleteTodos, editTodo } from '../api/todos';\nimport { Todo } from '../types/Todo';\nimport { Loader } from './Loader';\n\ninterface Props {\n  todos: Todo[]\n  setTodos: CallableFunction\n  isLoading: boolean,\n  visibleTodos: Todo[] | null,\n  setIsLoading: (v:boolean) => void,\n}\n\nexport const TodoMain: React.FC<Props> = (props) => {\n  const {\n    todos,\n    setTodos,\n    isLoading,\n    visibleTodos,\n    setIsLoading,\n  } = props;\n\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const [openedTodoId, setOpenedTodoId] = useState<number | null>(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, []);\n\n  const editHandler = (event: FormEvent) => {\n    setIsLoading(true);\n    event.preventDefault();\n\n    if (openedTodoId) {\n      editTodo(openedTodoId, editedTitle);\n      const editedTodo = todos.find(todo => todo.id === openedTodoId);\n\n      if (editedTodo) {\n        editedTodo.title = editedTitle;\n      }\n\n      setTodos(todos.map(todo => (todo.id === openedTodoId\n        ? editedTodo\n        : todo\n      )));\n    }\n\n    setIsEditorOpen(false);\n    setIsLoading(false);\n  };\n\n  const toggler = (todoId: number) => {\n    setIsLoading(true);\n    setOpenedTodoId(todoId);\n    const changedTodo = todos.find(todo => todoId === todo.id);\n    const newTodo = { ...changedTodo };\n    const todoTitle = changedTodo?.title;\n\n    if (changedTodo) {\n      newTodo.completed = !changedTodo.completed;\n\n      editTodo(todoId, todoTitle, newTodo.completed);\n    }\n\n    setTodos((prevTodos: Todo[]) => prevTodos.map(todo => {\n      if (todo.id === newTodo.id) {\n        return newTodo;\n      }\n\n      return todo;\n    }));\n    setIsLoading(false);\n  };\n\n  const onDelete = (todoId: number) => {\n    deleteTodos(todoId);\n    setTodos((prev: Todo[]) => prev.filter(todo => todo.id !== todoId));\n  };\n\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {(visibleTodos || todos).map(todo => (\n        <div\n          data-cy=\"Todo\"\n          key={todo.id}\n          className={classNames('todo', { completed: todo.completed })}\n        >\n          <label className=\"todo__status-label\">\n            <input\n              data-cy=\"TodoStatus\"\n              type=\"checkbox\"\n              className=\"todo__status\"\n              checked={todo.completed}\n              onChange={() => {\n                toggler(todo.id);\n              }}\n            />\n          </label>\n          {\n            isEditorOpen && todo.id === openedTodoId\n              ? (\n                <form onSubmit={editHandler}>\n                  <input\n                    ref={ref}\n                    data-cy=\"TodoTitleField\"\n                    type=\"text\"\n                    className=\"todo__title-field\"\n                    placeholder=\"Empty todo will be deleted\"\n                    value={editedTitle}\n                    onChange={(event) => setEditedTitle(event.target.value)}\n                  />\n                </form>\n              )\n              : (\n                <span\n                  data-cy=\"TodoTitle\"\n                  className=\"todo__title\"\n                  onDoubleClick={() => {\n                    setIsEditorOpen(true);\n                    setOpenedTodoId(todo.id);\n                    setEditedTitle(todo.title);\n                  }}\n                >\n                  {todo.title}\n                </span>\n              )\n          }\n\n          {isLoading && todo.id === openedTodoId && <Loader />}\n\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            data-cy=\"TodoDeleteButton\"\n            onClick={() => {\n              onDelete(todo.id);\n            }}\n          >\n            Ã—\n          </button>\n\n        </div>\n      ))}\n    </section>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}