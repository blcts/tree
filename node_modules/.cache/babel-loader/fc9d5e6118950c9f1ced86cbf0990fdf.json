{"ast":null,"code":"var _jsxFileName = \"/Users/lizaz/fed-exam-category-tree-blcts/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ModalCreating } from './components/ModalCreating/ModalCreating';\nimport { TreesMain } from './components/TreesMain';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [mainTrees, setMainTrees] = useState([]);\n  const [branches, setBranches] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"treesapp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"treesapp__title\",\n      children: \" Trees \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button is-warning\",\n      onClick: () => setIsModalOpen(true),\n      children: \"Create new tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), isModalOpen ? /*#__PURE__*/_jsxDEV(ModalCreating, {\n      mainTrees: mainTrees,\n      onSetMainTrees: setMainTrees,\n      onSetIsModalOpen: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"treesapp__content\",\n      children: mainTrees ? /*#__PURE__*/_jsxDEV(TreesMain, {\n        mainTrees: mainTrees,\n        branches: branches,\n        onSetBranches: setBranches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"treesapp__description\",\n        children: \" No trees \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"AiTYPyN+vSi98W1/59a1Mb4tQAA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ModalCreating","TreesMain","App","mainTrees","setMainTrees","branches","setBranches","isModalOpen","setIsModalOpen"],"sources":["/Users/lizaz/fed-exam-category-tree-blcts/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext } from 'react';\nimport { ModalCreating } from './components/ModalCreating/ModalCreating';\nimport { TreesMain } from './components/TreesMain';\nimport { Tree } from './types/Tree';\n\n\nexport const App: React.FC = () => {\n  const [mainTrees, setMainTrees] = useState<Tree[]>([]);\n  const [branches, setBranches] = useState<Tree[]>([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n\n  return ( \n    <div className=\"treesapp\">\n      <h1 className=\"treesapp__title\"> Trees </h1>\n\n      <button \n        className=\"button is-warning\"\n        onClick={() => setIsModalOpen(true)}\n      > \n        Create new tree\n      </button>\n\n      {isModalOpen\n      ? < ModalCreating \n          mainTrees={mainTrees} \n          onSetMainTrees={setMainTrees}\n          onSetIsModalOpen={setIsModalOpen}\n        />\n      : <div className=\"treesapp__content\">\n          {mainTrees\n            ? < TreesMain \n                mainTrees={mainTrees}\n                branches={branches}\n                onSetBranches={setBranches}\n              />\n            : <h2 className=\"treesapp__description\"> No trees </h2>\n          }\n        </div>\n      }\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAA+D,OAA/D;AACA,SAASC,aAAT,QAA8B,0CAA9B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAIA,OAAO,MAAMC,GAAa,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAS,EAAT,CAA1C;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAS,EAAT,CAAxC;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;EAGA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAI,SAAS,EAAC,iBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MACE,SAAS,EAAC,mBADZ;MAEE,OAAO,EAAE,MAAMS,cAAc,CAAC,IAAD,CAF/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,EAUGD,WAAW,gBACV,QAAE,aAAF;MACE,SAAS,EAAEJ,SADb;MAEE,cAAc,EAAEC,YAFlB;MAGE,gBAAgB,EAAEI;IAHpB;MAAA;MAAA;MAAA;IAAA,QADU,gBAMV;MAAK,SAAS,EAAC,mBAAf;MAAA,UACGL,SAAS,gBACN,QAAE,SAAF;QACE,SAAS,EAAEA,SADb;QAEE,QAAQ,EAAEE,QAFZ;QAGE,aAAa,EAAEC;MAHjB;QAAA;QAAA;QAAA;MAAA,QADM,gBAMN;QAAI,SAAS,EAAC,uBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAPN;MAAA;MAAA;MAAA;IAAA,QAhBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CApCM;;GAAMJ,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}