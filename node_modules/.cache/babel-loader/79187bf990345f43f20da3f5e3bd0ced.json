{"ast":null,"code":"var _jsxFileName = \"/Users/lizaz/fed-exam-category-tree-blcts/src/components/todoFooter.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { deleteTodos } from '../api/todos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoFooter = props => {\n  _s();\n\n  const {\n    todos,\n    setTodos,\n    setVisibleTodos\n  } = props;\n  const [selectedFilter, setSelectedFilter] = useState('All');\n  const filter = ['All', 'Active', 'Completed'];\n  const completedTodos = [...todos].filter(todo => todo.completed);\n\n  const clearCompleted = () => {\n    const filteredTodos = [...todos].filter(todo => !todo.completed);\n    completedTodos.forEach(todo => deleteTodos(todo.id));\n    setTodos(filteredTodos);\n  };\n\n  const filterBy = option => {\n    const filteringTodos = [...todos];\n    setSelectedFilter(option);\n    const filteredTodos = filteringTodos.filter(todo => {\n      switch (option) {\n        case 'Active':\n          return todo.completed === false;\n\n        case 'Completed':\n          return todo.completed === true;\n\n        default:\n          return todo;\n      }\n    });\n\n    if (option === 'All') {\n      setVisibleTodos(null);\n    } else {\n      setVisibleTodos(filteredTodos);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"todoapp__footer\",\n    \"data-cy\": \"Footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todo-count\",\n      \"data-cy\": \"todosCounter\",\n      children: `${todos.length - completedTodos.length} items left`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"filter\",\n      \"data-cy\": \"Filter\",\n      children: filter.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          \"data-cy\": `FilterLink${item}`,\n          href: `#/${selectedFilter === 'All' ? '' : selectedFilter.toLowerCase()}`,\n          className: classNames('filter__link', selectedFilter === item && 'selected'),\n          onClick: () => filterBy(item),\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-cy\": \"ClearCompletedButton\",\n      type: \"button\",\n      className: \"todoapp__clear-completed\",\n      onClick: clearCompleted,\n      children: \"Clear completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoFooter, \"JdWGyIgyAxNJ5jxPXev2qsEkOZ0=\");\n\n_c = TodoFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoFooter\");","map":{"version":3,"names":["classNames","React","useState","deleteTodos","TodoFooter","props","todos","setTodos","setVisibleTodos","selectedFilter","setSelectedFilter","filter","completedTodos","todo","completed","clearCompleted","filteredTodos","forEach","id","filterBy","option","filteringTodos","length","map","item","toLowerCase"],"sources":["/Users/lizaz/fed-exam-category-tree-blcts/src/components/todoFooter.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { deleteTodos } from '../api/todos';\nimport { Todo } from '../types/Todo';\n\ninterface Props{\n  todos: Todo[],\n  setTodos: (v: Todo[]) => void,\n  setVisibleTodos: (v: Todo[] | null) => void,\n\n}\nexport const TodoFooter: React.FC<Props> = (props) => {\n  const { todos, setTodos, setVisibleTodos } = props;\n\n  const [selectedFilter, setSelectedFilter] = useState('All');\n\n  const filter = ['All', 'Active', 'Completed'];\n\n  const completedTodos = [...todos].filter(todo => todo.completed);\n\n  const clearCompleted = () => {\n    const filteredTodos = [...todos].filter(todo => !todo.completed);\n\n    completedTodos.forEach(todo => deleteTodos(todo.id));\n\n    setTodos(filteredTodos);\n  };\n\n  const filterBy = (option: string) => {\n    const filteringTodos = [...todos];\n\n    setSelectedFilter(option);\n\n    const filteredTodos = filteringTodos.filter(todo => {\n      switch (option) {\n        case 'Active':\n          return todo.completed === false;\n        case 'Completed':\n          return todo.completed === true;\n        default:\n          return todo;\n      }\n    });\n\n    if (option === 'All') {\n      setVisibleTodos(null);\n    } else {\n      setVisibleTodos(filteredTodos);\n    }\n  };\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todos.length - completedTodos.length} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        {filter.map(item => {\n          return (\n            <a\n              data-cy={`FilterLink${item}`}\n              key={item}\n              href={`#/${selectedFilter === 'All' ? '' : selectedFilter.toLowerCase()}`}\n              className={classNames(\n                'filter__link', (selectedFilter === item && 'selected'),\n              )}\n              onClick={() => filterBy(item)}\n            >\n              {item}\n            </a>\n          );\n        })}\n      </nav>\n\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AASA,OAAO,MAAMC,UAA2B,GAAIC,KAAD,IAAW;EAAA;;EACpD,MAAM;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,IAAuCH,KAA7C;EAEA,MAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;EAEA,MAAMS,MAAM,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,WAAlB,CAAf;EAEA,MAAMC,cAAc,GAAG,CAAC,GAAGN,KAAJ,EAAWK,MAAX,CAAkBE,IAAI,IAAIA,IAAI,CAACC,SAA/B,CAAvB;;EAEA,MAAMC,cAAc,GAAG,MAAM;IAC3B,MAAMC,aAAa,GAAG,CAAC,GAAGV,KAAJ,EAAWK,MAAX,CAAkBE,IAAI,IAAI,CAACA,IAAI,CAACC,SAAhC,CAAtB;IAEAF,cAAc,CAACK,OAAf,CAAuBJ,IAAI,IAAIV,WAAW,CAACU,IAAI,CAACK,EAAN,CAA1C;IAEAX,QAAQ,CAACS,aAAD,CAAR;EACD,CAND;;EAQA,MAAMG,QAAQ,GAAIC,MAAD,IAAoB;IACnC,MAAMC,cAAc,GAAG,CAAC,GAAGf,KAAJ,CAAvB;IAEAI,iBAAiB,CAACU,MAAD,CAAjB;IAEA,MAAMJ,aAAa,GAAGK,cAAc,CAACV,MAAf,CAAsBE,IAAI,IAAI;MAClD,QAAQO,MAAR;QACE,KAAK,QAAL;UACE,OAAOP,IAAI,CAACC,SAAL,KAAmB,KAA1B;;QACF,KAAK,WAAL;UACE,OAAOD,IAAI,CAACC,SAAL,KAAmB,IAA1B;;QACF;UACE,OAAOD,IAAP;MANJ;IAQD,CATqB,CAAtB;;IAWA,IAAIO,MAAM,KAAK,KAAf,EAAsB;MACpBZ,eAAe,CAAC,IAAD,CAAf;IACD,CAFD,MAEO;MACLA,eAAe,CAACQ,aAAD,CAAf;IACD;EACF,CArBD;;EAuBA,oBACE;IAAQ,SAAS,EAAC,iBAAlB;IAAoC,WAAQ,QAA5C;IAAA,wBACE;MAAM,SAAS,EAAC,YAAhB;MAA6B,WAAQ,cAArC;MAAA,UACI,GAAEV,KAAK,CAACgB,MAAN,GAAeV,cAAc,CAACU,MAAO;IAD3C;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,QAAf;MAAwB,WAAQ,QAAhC;MAAA,UACGX,MAAM,CAACY,GAAP,CAAWC,IAAI,IAAI;QAClB,oBACE;UACE,WAAU,aAAYA,IAAK,EAD7B;UAGE,IAAI,EAAG,KAAIf,cAAc,KAAK,KAAnB,GAA2B,EAA3B,GAAgCA,cAAc,CAACgB,WAAf,EAA6B,EAH1E;UAIE,SAAS,EAAEzB,UAAU,CACnB,cADmB,EACFS,cAAc,KAAKe,IAAnB,IAA2B,UADzB,CAJvB;UAOE,OAAO,EAAE,MAAML,QAAQ,CAACK,IAAD,CAPzB;UAAA,UASGA;QATH,GAEOA,IAFP;UAAA;UAAA;UAAA;QAAA,QADF;MAaD,CAdA;IADH;MAAA;MAAA;MAAA;IAAA,QALF,eAuBE;MACE,WAAQ,sBADV;MAEE,IAAI,EAAC,QAFP;MAGE,SAAS,EAAC,0BAHZ;MAIE,OAAO,EAAET,cAJX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CA1EM;;GAAMX,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}